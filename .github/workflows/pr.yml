name: Pull Request

on:
  pull_request:
    branches: [ main, dev ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clone YouTube Source Plugin
        run: |
          echo "Cloning YouTube source plugin from external repository..."
          git clone --depth 1 --branch main https://github.com/lavalink-devs/youtube-source.git youtube-source-external
          echo "YouTube source plugin cloned successfully"

      - name: Setup Java for YouTube Plugin Build
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      - name: Build YouTube Plugin with Gradle
        run: |
          cd youtube-source-external
          echo "Building YouTube source plugin..."
          chmod +x gradlew
          ./gradlew build --no-daemon
          echo "Plugin build completed"

          # Create plugins directory if it doesn't exist
          mkdir -p ../plugins

          # Copy built plugin JAR to plugins directory
          find . -name "youtube-plugin-*.jar" -path "*/build/libs/*" -exec cp {} ../plugins/ \;

          # List what was copied
          echo "Plugin JARs copied to plugins directory:"
          ls -la ../plugins/

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            libssl-dev \
            libopus-dev \
            libavcodec-dev \
            libavformat-dev \
            libavutil-dev \
            libavfilter-dev \
            libavdevice-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-features --workspace

      - name: Run integration tests
        run: cargo test --test integration_tests

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            libssl-dev \
            libopus-dev \
            libavcodec-dev \
            libavformat-dev \
            libavutil-dev \
            libavfilter-dev \
            libavdevice-dev

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build project
        run: cargo build --release

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-outdated
        run: cargo install cargo-outdated

      - name: Check for outdated dependencies
        run: |
          echo "Checking for outdated dependencies (informational only):"
          cargo outdated || echo "Some dependencies are outdated, but this is informational only"
